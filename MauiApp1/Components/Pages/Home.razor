@page "/"

<h1 role="clock"> @currentTime</h1>
<p role="record"> Record: @record</p>

<button class="btn start" @onclick="startTimer">Start Timer</button>
<button class="btn stop" @onclick="stopTimer">Stop Timer</button>
<button class="btn reset" @onclick="restartTimer">Restart Timer</button>
<button class="btn finish" @onclick="finish">Finish</button>
<button class="btn finish" @onclick="resetRecord">Reset Record</button>

@code {
    private Stopwatch stopwatch = new Stopwatch();
    private string currentTime = "00:00:00:000";
    private string record = Preferences.Default.Get<string>("record1", "None");
    private System.Timers.Timer aTimer = new System.Timers.Timer(10);

    private void startTimer()
    {
        aTimer.Elapsed += new System.Timers.ElapsedEventHandler(timerElapsed);
        aTimer.AutoReset = true;
        aTimer.Enabled = true;

        stopwatch.Start();
    }

    private async void timerElapsed(Object? source, System.Timers.ElapsedEventArgs e)
    {
        currentTime = stopwatch.Elapsed.ToString(@"hh\:mm\:ss\.fff");
        await InvokeAsync(StateHasChanged);
    }

    private void stopTimer()
    {
        stopwatch.Stop();
    }

    private void restartTimer()
    {
        stopwatch.Reset();
        currentTime = "00:00:00:000";
    }

    private void finish()
    {
        if (record == "None" || TimeSpan.ParseExact(currentTime, "hh\\:mm\\:ss\\.fff", System.Globalization.CultureInfo.InvariantCulture) < TimeSpan.ParseExact(record, "hh\\:mm\\:ss\\.fff", System.Globalization.CultureInfo.InvariantCulture))
        {
            record = currentTime;
            Preferences.Default.Set("record1", record);
        }
        restartTimer();
    }

    private void resetRecord()
    {
        record = "None";
        Preferences.Default.Set("record1", record);
    }
}